
-- 1 TASK
SELECT * FROM ORDERS O
INNER JOIN CUSTOMERS C
ON O.CUSTOMERID = C.CUSTOMERID AND YEAR(O.ORDERDATE) > 2022

-- 2 TASK
SELECT * FROM EMPLOYEES E 
JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID AND D.DEPARTMENTNAME IN('SALES', 'MARKETING')

-- 3 TASK
SELECT * FROM (SELECT * FROM PRODUCTS WHERE PRICE > 100) P
JOIN ORDERS O
ON P.PRODUCTID = O.PRODUCTID

-- 4 TASK
SELECT TEMP_ORDERID FROM #TABLE T
JOIN ORDERS O
ON T.temp_orderid = O.ORDERID

-- 5 TASK
SELECT * FROM EMPLOYEES E
CROSS APPLY 
(SELECT TOP 5 * FROM DEPARTMENTS D
 WHERE E.DEPARTMENTID = D.DEPARTMENTID
 ORDER BY SALES DESC) AS D
 
 -- 6 TASK
 SELECT * FroM CUSTOMERS C
 JOIN ORDERS O 
 ON C.CUSTOMERID = O.CUSTOMERID AND c.loyalty = 'GOLD' AND YEAR(ORDERDATE) = 2025
 
 -- 7 TASK
 SELECT * FROM (SELECT CustomerID, COUNT(*)as ordercount FROM Orders GROUP BY CustomerID) o
 JOIN CUSTOMERS C 
 ON O.CUSTOMERID = C.CUSTOMERID
 SELECT * FROM PRODUCTS
 
 -- 8 TASK 
 SELECT * FROM PRODUCTS P
 JOIN SUPPLIERS S 
 ON P.SUPPLIERID = S.SUPPLIERID AND S.SUPPLIER IN('SUPPLIER A', 'SUPPLIER B')
 
 -- 9 TASK
 SELECT * FROM customers
 OUTER APPLy
 (SELECT TOP 3 ORDERID FROM ORDERS O
  WHERE O.CUSTOMERID = customers.CustomerID) ord

--  SELECT 
--    e.EmployeeID,
--    s.Salary
--FROM 
--    Employees e
--CROSS APPLY 
--    (SELECT TOP 1 Salary FROM employees WHERE EmployeeID = e.EmployeeID ORDER BY hireDate DESC) s;

-- 10 task
SELECT * FROM DEPARTMENTS D
CROSS APPLY GETEMPLOYEEDERPARTMENT(D.DEPARTMENTID) E

-- 11 TASK
SELECT * FROM ORDERS O
JOIN CUSTOMERS C
ON O.CUSTOMERID = C.CustomerID AND O.TOTALAMOUNT > 5000

-- 12 TASK
SELECT * FROM PRODUCTS P
JOIN SALES S
ON P.PRODUCTID = S.PRODUCTID AND (S.DISCOUNT >20 OR YEAR(SALEDATE) = 2022)

-- 13 TASK
SELECT * FROM PRODUCTS P
OUTER APPLY 
(SELECT ProductID, SUM(SALEAmount) AS SUMAMOUNT
FROM Sales
WHERE SALES.PRODUCTID = P.PRODUCTID
GROUP BY ProductID) S

-- 14 TASK
SELECT TEMP_ProductID FROM TEMPTABLE T
OUTER FULL  JOIN PRODUCTS P
ON T.TEMP_PRODUCTID = P.PRODUCTID

-- 15 TASK
SELECT * FROM EMPLOYEES E
CROSS APPLY 
GETEMPLOYEES (E.EMPLOYEEID) F

CREATE FUNCTION GETEMPLOYEES (@EmployeeID INT)
RETURNS TABLE  
AS  
RETURN  
(  
    SELECT S.EmployeeID, S.SaleAmount, S.SaleDate
    FROM Sales S
    WHERE S.EmployeeID = @EmployeeID  
);
SELECT * FROM SALES

-- 16 TASK
SELECT * FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID AND D.DepartmentName = 'HR' AND E.Salary > 5000

-- 17 TASK
SELECT * FROM ORDERS O
JOIN PAYMENTS P
ON O.PAYMENTID = P.PAYMENTID AND (ORDERPAID = 'FULLY' OR ORDERPAID = 'PARTIALLY')

-- 18 TASK
SELECT * FROM CUSTOMERS C
OUTER APPLY
(SELECT TOP 1 O.ORDERID FROM ORDERS O
WHERE O.CUSTOMERID = C.CUSTOMERID
ORDER BY O.ORDERDATE DESC) E

-- 19 TASK
SELECT * FROM PRODUCTS P
JOIN SALES S
ON P.PRODUCTID = S.PRODUCTID AND YEAR(SALEDATE) = 2023 AND P.RATING>4

-- 20 TASK
SELECT * FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DepartmentID = D.departmentid AND ((D.DepartmentName = 'HR' OR D.DEPARTMENTNAME = 'SALES') OR E.JOBTITLE = 'MANAGER')

-- 21 TASK
SELECT * FROM ORDERS O
JOIN CUSTOMERS C
ON O.CUSTOMERID = C.CUSTOMERID AND LOCATION = 'NEW YORK' AND QUANTITY > 10

-- 22 TASK
SELECT * FROM PRODUCTS P
JOIN SALES S
ON S.PRODUCTID = S.PRODUCTID AND (P.CATEGORY = 'ELECTRONICS' OR DISCOUNT >15)

-- 23 TASK
SELECT * FROM CATEGORIES C
LEFT JOIN  (SELECT CategoryID, COUNT(*) AS PRODUCTCOUNT FROM PRODUCTS  GROUP BY CategoryID) P
ON C.CATEGORYID = P.CATEGORYID

-- 24 TASK
SELECT TEMP_EMPLOYEEID FROM TEMPTABLE T
JOIN EMPLOYEES E
ON T.TEMP_EMPLOYEEID = E.EMPLOYEEID AND (SALARY > 4000 AND DEPARTMENTNAME = 'IT')

-- 25 TASK
SELECT * FROM EMPLLOYEES E
CROSS APPLY
GETEMPLOYEECOUNT(D.DEPARTMENTID) E

-- 26 TASK
SELECT * FROM ORDERS O
JOIN CUSTOMERS C
ON O.CUSTOMERID = C.CUSTOMERID AND LOCATION = 'CALIFORNIA' AND TOTALAMOUNT > 1000

-- 27 TASK
SELECT * FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID AND (D.DEPARTMENTNAME IN('HR', 'FINANCE') OR E.JOBTITLE = 'EXECUTIVE')

-- 28 TASK
SELECT * FROM CUSTOMERS C
OUTER APPLY
GETCUSTOMERORDERS(C.CUSTOMERID) O

-- 29 TASK
SELECT * FROM SALES S
JOIN PRODUCTS P
ON S.PRODUCTID = P.PRODUCTID AND QUANTITY > 100 AND PRICE > 50

-- 30 TASK
SELECT * FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID AND (D.DEPARTMENTNAME IN('SALES', 'MARKETING') OR SALARY > 6000)


