CREATE DATABASE SQL4
USE SQL4
CREATE SCHEMA SQL4
GO

CREATE TABLE PRODUCTS(
PRODUCTID INT PRIMARY KEY,
PRODUCTNAME VARCHAR(50),
CATEGORYID INT,
PRICE DECIMAL (10,2),
STOCK INT
)


CREATE TABLE CUSTOMERS(
CUSTOMERID INT PRIMARY KEY,
CUSTOMERNAME VARCHAR(50),
COUNTRY VARCHAR(50),
TOTALSALES DECIMAL(10,2)
)


CREATE TABLE ORDERS(
ORDERID INT PRIMARY KEY,
CUSTOMERID INT,
ORDERDATE DATE,
TOTALAMOUNT DECIMAL (10,2),
CATEGORYID INT)


CREATE TABLE EMPLOYEES(
EMPLOYEEID INT PRIMARY KEY,
EMPLOYEENAME VARCHAR(50),
AGE INT,
SALARY DECIMAL (10,2),
COUNTRY VARCHAR(50),
DEPARTMENT VARCHAR(50)
)

CREATE TABLE CATEGORIES(
CATEGORYID INT PRIMARY KEY,
CATEGORYNAME VARCHAR(50)
)

CREATE TABLE ORDERDETAILS(
ORDERDETAILID INT PRIMARY KEY,
ORDERID INT,
PRODUCTID INT,
QUANTITY INT,
PRICE DECIMAL (10,2)
)
CREATE TABLE SALES(
SALESID INT PRIMARY KEY,
PRODUCTID INT,
CUSTOMERID INT,
REGION VARCHAR(50),
SALESAMOUNT DECIMAL (10,2)
)

CREATE TABLE [RETURNS](
RETURNID INT PRIMARY KEY,
PRODUCTID INT,
CUSTOMERID INT,
RETURNAMOUNT DECIMAL(10,2)
)

CREATE TABLE DISCONTINUEDPRODUCTS(
PRODUCTID INT PRIMARY KEY,
PRODUCTNAME VARCHAR(50)
)

CREATE TABLE VIPCUSTOMERS(
CUSTOMERID INT PRIMARY KEY,
VIPSTATES VARCHAR(50)
)
CREATE TABLE INVOIVES(
INVOICEID INT,
CUSTOMERID INT,
ORDERID INT)

CREATE TABLE OUTOFSTOCK(
PRODUCTID INT,
PRODUCTNAME VARCHAR(50))

INSERT INTO Products (ProductID, ProductName, CategoryID, Price, Stock) VALUES
(1, 'Laptop', 1, 1200, 50),
(2, 'Smartphone', 1, 800, 100),
(3, 'Tablet', 1, 500, 75),
(4, 'Monitor', 2, 300, 60),
(5, 'Keyboard', 2, 50, 200),
(6, 'Mouse', 2, 30, 150),
(7, 'Printer', 3, 200, 40),
(8, 'Desk Chair', 4, 150, 80),
(9, 'Desk', 4, 250, 30),
(10, 'Webcam', 2, 70, 90),
(11, 'Headphones', 5, 90, 120),
(12, 'Speakers', 5, 120, 60);


INSERT INTO Categories (CategoryID, CategoryName) VALUES
(1, 'Electronics'),
(2, 'Accessories'),
(3, 'Office Equipment'),
(4, 'Furniture'),
(5, 'Audio Devices');

INSERT INTO Customers (CustomerID, CustomerName, Country, TotalSales) VALUES
(1, 'John Doe', 'USA', 12000),
(2, 'Jane Smith', 'UK', 8000),
(3, 'Robert Brown', 'Canada', 5000),
(4, 'Emily Johnson', 'Germany', 7000),
(5, 'Michael White', 'France', 4000),
(6, 'Sarah Davis', 'Italy', 10000),
(7, 'David Wilson', 'USA', 15000),
(8, 'Sophia Martinez', 'Spain', 2000),
(9, 'Daniel Lee', 'China', 6000),
(10, 'Olivia Clark', 'Japan', 3000);

INSERT INTO Orders (OrderID, CustomerID, OrderDate, TotalAmount) VALUES
(1, 1, '2024-02-01', 1200),
(2, 2, '2024-02-05', 800),
(3, 3, '2024-02-10', 500),
(4, 4, '2024-02-12', 300),
(5, 5, '2024-02-14', 450),
(6, 6, '2024-02-15', 200),
(7, 7, '2024-02-17', 1500),
(8, 8, '2024-02-18', 250),
(9, 9, '2024-02-20', 650),
(10, 10, '2024-02-22', 400);

INSERT INTO Employees (EmployeeID, EmployeeName, Age, Department, Salary, Country) VALUES
(1, 'Alice Johnson', 28, 'HR', 5000, 'USA'),
(2, 'Bob Smith', 35, 'IT', 7000, 'UK'),
(3, 'Charlie Brown', 23, 'Finance', 6000, 'Canada'),
(4, 'Diana Lee', 40, 'Marketing', 5500, 'Germany'),
(5, 'Evan Wilson', 30, 'HR', 4800, 'France'),
(6, 'Fiona White', 33, 'IT', 6500, 'Italy'),
(7, 'George Harris', 26, 'Sales', 5800, 'USA');

INSERT INTO OrderDetails (OrderDetailID, OrderID, ProductID, Quantity, Price) VALUES
(1, 1, 101, 2, 499.99),
(2, 1, 102, 1, 299.99),
(3, 2, 103, 3, 79.99),
(4, 3, 101, 1, 499.99),
(5, 4, 104, 2, 199.99),
(6, 5, 105, 5, 25.99),
(7, 6, 106, 4, 59.99),
(8, 7, 107, 2, 129.99),
(9, 8, 108, 3, 89.99),
(10, 9, 109, 1, 999.99),
(11, 10, 101, 2, 499.99),
(12, 11, 110, 3, 149.99),
(13, 12, 103, 1, 79.99),
(14, 13, 104, 2, 199.99),
(15, 14, 102, 1, 299.99);


INSERT INTO Sales (SALESID, ProductID, CustomerID, Region, SalesAmount) VALUES
(1, 1, 1, 'North America', 1200),
(2, 2, 2, 'Europe', 800),
(3, 3, 3, 'Asia', 500),
(4, 4, 4, 'Europe', 300),
(5, 5, 5, 'North America', 150),
(6, 6, 6, 'Asia', 120),
(7, 7, 7, 'Europe', 200);

INSERT INTO Returns (ReturnID, ProductID, CustomerID, ReturnAmount) VALUES
(1, 2, 2, 800),
(2, 5, 5, 50),
(3, 7, 7, 200),
(4, 10, 10, 70),
(5, 3, 3, 500);

INSERT INTO DiscontinuedProducts (ProductID, ProductName) VALUES
(3, 'Tablet'),
(7, 'Printer'),
(10, 'Webcam'),
(13, 'Gaming Console'),
(18, 'Microphone');

INSERT INTO VIPCustomers (CustomerID, VIPSTATES) VALUES
(1, 'Gold'),
(6, 'Platinum'),
(7, 'Gold'),
(12, 'Silver'),
(15, 'Gold');

INSERT INTO InvoiVes (InvoiceID, CustomerID, OrderID)
VALUES 
(1, 101, 5001),
(2, 102, 5002),
(3, 103, 5003),
(4, 104, 5004),
(5, 105, 5005),
(6, 106, 5006),
(7, 107, 5007);

INSERT INTO OutOfStock (ProductID, ProductName)
VALUES 
(201, 'Laptop'),
(202, 'Smartphone'),
(203, 'Headphones'),
(204, 'Tablet'),
(205, 'Gaming Console');


SELECT PRODUCTNAME AS [NAME] FROM PRODUCTS

SELECT CUSTOMERNAME AS CLIENT FROM CUSTOMERS

SELECT PRODUCTNAME FROM PRODUCTS
UNION
SELECT PRODUCTNAME FROM DISCONTINUEDPRODUCTS

SELECT PRODUCTNAME FROM PRODUCTS
INTERSECT
SELECT PRODUCTNAME FROM DISCONTINUEDPRODUCTS

SELECT PRODUCTID FROM PRODUCTS 
UNION ALL
SELECT PRODUCTID FROM ORDERDETAILS

SELECT DISTINCT CUSTOMERNAME, COUNTRY FROM CUSTOMERS
SELECT *,
CASE
WHEN PRICE>100 THEN 'HIGH'
ELSE 'LOW'END
FROM PRODUCTS
SELECT CATEGORYNAME,
	COUNT(CATEGORYID) FROM CATEGORIES
GROUP BY CATEGORYNAME
SELECT STOCK,
IIF(STOCK>100, 'YES', 'NO') AS CATEGORY
FROM PRODUCTS
------------------------------------------------------------

SELECT CUSTOMERS.CUSTOMERID, Customers.CustomerName AS CLIENTNAME, Orders.OrderID, Orders.OrderDate
FROM CUSTOMERS
INNER JOIN ORDERS ON CUSTOMERS.CUSTOMERID = ORDERS.CUSTOMERID

SELECT PRODUCTNAME FROM PRODUCTS
UNION
SELECT PRODUCTNAME FROM DISCONTINUEDPRODUCTS

SELECT PRODUCTNAME FROM PRODUCTS
EXCEPT
SELECT PRODUCTNAME FROM DISCONTINUEDPRODUCTS

SELECT TOTALAMOUNT,
CASE
WHEN TOTALAMOUNT > 5 THEN 'ELIGIBLE'
ELSE 'NOT ELIGIBLE'
END
FROM ORDERS

SELECT *,
IIF (PRICE > 100, 'EXPENSIVE', 'AFFORDABLE')
FROM PRODUCTS
SELECT CUSTOMERID, COUNT(TOTALAMOUNT) AS TOTAL FROM ORDERS
GROUP BY CUSTOMERID

SELECT * FROM EMPLOYEES
WHERE AGE < 25 AND SALARY >= 6000
SELECT REGION, COUNT(SALESAMOUNT) AS TOTALSALES FROM SALES
GROUP BY REGION

SELECT CUSTOMERS.CUSTOMERNAME, ORDERS.ORDERID AS ORDERDATE
FROM CUSTOMERS
LEFT JOIN ORDERS ON CUSTOMERS.CUSTOMERID = ORDERS.CUSTOMERID
ORDER BY CUSTOMERS.CUSTOMERNAME 

UPDATE EMPLOYEES
SET SALARY = SALARY * 1.1
WHERE DEPARTMENT = 'HR'
------------------------------------------------------------------------

SELECT ProductID, CustomerID, COUNT(*) AS TotalTransactions
FROM (SELECT PRODUCTID, CUSTOMERID FROM SALES
UNION ALL
SELECT PRODUCTID, CUSTOMERID FROM RETURNS) AS CombinedData
GROUP BY PRODUCTID, CUSTOMERID

SELECT PRODUCTNAME FROM PRODUCTS
INTERSECT
SELECT PRODUCTNAME FROM DISCONTINUEDPRODUCTS

SELECT *,
CASE
WHEN SALESAMOUNT > 10000 THEN 'TOP TIER'
WHEN SALESAMOUNT > 5000 THEN 'MID TIER'
ELSE 'LOW TIER' END
FROM SALES

SELECT CUSTOMERID FROM ORDERS
EXCEPT
SELECT CUSTOMERID FROM INVOIVES

SELECT CUSTOMERID, PRODUCTID, REGION, COUNT(SALESAMOUNT) FROM SALES
GROUP BY CUSTOMERID, PRODUCTID, REGION

SELECT *,
CASE
WHEN QUANTITY < 2 THEN PRICE * 0.8
WHEN QUANTITY < 4 THEN PRICE * 0.6
ELSE PRICE * 0.1 END
FROM ORDERDETAILS

SELECT *, IIF(STOCK > 0, 'AVAILABLE', 'OUT OF STOCK') FROM PRODUCTS

SELECT CUSTOMERID FROM CUSTOMERS
EXCEPT
SELECT CUSTOMERID FROM VIPCUSTOMERS
