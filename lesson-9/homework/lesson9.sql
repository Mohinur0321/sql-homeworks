-- 1 TASK
SELECT E.EMPLOYEEID, E.NAME, E.SALARY FROM EMPLOYEES E
INNER JOIN
DEPARTMENTS D ON E.DEPARTMENTID = D.DEPARTMENTID
WHERE E.SALARY > 5000

-- 2 TASK
SELECT O.CUSTOMERNAME, O.PRODUCTID, O.QUANTITY, O.ORDERDATE FROM ORDERS O
INNER JOIN CUSTOMERS C
ON  O.CUSTOMERID = C.CUSTOMERID
WHERE YEAR(O.ORDERDATE) = 2023

-- 3 TASK
SELECT E.NAME, COALESCE(D.DEPARTMENTNAME, 'NO DEPARTMENT') AS DEPARTMENTNAME FROM EMPLOYEES E
LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID

-- 4 TASK
SELECT P.PRODUCTNAME, S.SUPPLIERNAME FROM PRODUCTS P
RIGHT JOIN SUPPLIERS S
ON P.SUPPLIERID = S.SUPPLIERID

-- 5 TASK
SELECT COALESCE(O.PRODUCTID, 'NO ORDER') AS PRODUCTID,
       COALESCE(P.PAYMENTID, 'NO PAYMENT') AS PAYMENTID
FROM ORDERS O
FULL JOIN PAYMENTS P
ON O.ORDERID = P.ORDERID

-- 6 TASK
SELECT E.NAME AS EMPLOYEE_NAME, M.NAME AS MANAGER_NAME
FROM EMPLOYEES E
LEFT JOIN EMPLOYEES M
ON E.MANAGERID = M.EMPLOYEEID

-- 7 TASK
SELECT P.PRODUCTNAME, S.TOTALSALES FROM PRODUCTS P
INNER JOIN SALES S
ON P.PRODUCTID = S.PRODUCTID
WHERE S.TOTALSALES > 100

-- 8 TASK
SELECT S.STUDENTNAME, C.COURSENAME FROM STUDENTS S
INNER JOIN COURSES C
ON S.STUDENTID = C.STUDENTID
WHERE C.COURSENAME = 'MATH 101'

--9 TASK
SELECT C.CUSTOMERNAME, COUNT(O.ORDERID) AS ORDER_COUNT
FROM CUSTOMERS C
INNER JOIN ORDERS O
ON C.CUSTOMERID = O.CUSTOMERID
GROUP BY C.CUSTOMERNAME
HAVING COUNT(O.ORDERID) > 3

-- 10 TASK
SELECT E.NAME, D.DEPARTMENTNAME FROM EMPLOYEES E
LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID
WHERE LOWER(D.DEPARTMENTNAME) IN ('HR','HUMAN RESOURCES')

-- 11 TASK
SELECT E.NAME, D.DEPARTMENTNAME FROM EMPLOYEES E
INNER JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID
WHERE (SELECT COUNT(*) FROM EMPLOYEES WHERE DEPARTMENTID = D.DEPARTMENTID) > 10

-- 12 TASK
SELECT P.PRODUCTNAME, S.SALES FROM PRODUCTS P
LEFT JOIN SALES S
ON P.PRODUCTID = S.PRODUCTID
WHERE S.PRODUCTID IS NULL

-- 13 TASK
SELECT C.CUSTOMERNAME FROM CUSTOMERS C
RIGHT JOIN ORDERS O
ON C.CUSTOMERID = O.CUSTOMERID
GROUP BY C.CUSTOMERNAME
HAVING COUNT(O.ORDERID) >= 1

-- 14 TASK
SELECT E.NAME, D.DEPARTMENTNAME FROM EMPLOYEES E 
FULL JOIN  DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID
WHERE D.DEPARTMENTNAME IS NULL

-- 15 TASK
SELECT E.NAME AS EMPLOYEE_NAME, M.NAME AS COLLEAGUE_NAME FROM EMPLOYEES E
INNER JOIN EMPLOYEES M
ON E.MANAGERID = M.MANAGERID
AND E.EMPLOYEEID <> M.EMPLOYEEID

-- 16 TASK
SELECT C.CUSTOMERNAME, O.ORDERID FROM CUSTOMERS C
LEFT JOIN ORDERS O
ON C.CUSTOMERID = O.CUSTOMERID
WHERE YEAR(ORDERDATE) = 2022

-- 17 TASK
SELECT E.NAME FROM EMPLOYEES E
INNER JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID
WHERE D.DEPARTMENTNAME = 'SALES' AND E.SALARY > 5000 

-- 18 TASK
SELECT E.NAME FROM EMPLOYEES E
INNER JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID 
WHERE D.DEPARTMENTNAME = 'IT'

-- 19 TASK
SELECT O.ORDERID, P.PAYMENTID FROM ORDERS O
FULL JOIN PAYMENTS P
ON O.ORDERID = P.ORDERID
WHERE O.ORDERID IS NOT NULL AND P.PAYMENTID IS NOT NULL

-- 20 TASK
SELECT P.PRODUCTNAME FROM PRODUCTS P
LEFT JOIN ORDERS O
ON P.PRODUCTID = O.PRODUCTID
WHERE O.ORDERID IS NULL

-- 21 TASK
SELECT E.NAME, D.DEPARTMENTNAME FROM EMPLOYEES E
INNER JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID
INNER JOIN 
(SELECT DEPARTMENTID, AVG(SALARY) AS AVGSALARY FROM EMPLOYEES
GROUP BY DEPARTMENTID) DEPTAVG ON E.DEPARTMENTID = DEPTAVG.DEPARTMENTID
WHERE E.SALARY > DEPTAVG.AVGSALARY

-- 22 TASK
SELECT O.ORDERID, O.ORDERDATE, P.PAYMENTID FROM ORDERS O 
LEFT JOIN PAYMENTS P
ON O.ORDERID = P.ORDERID
WHERE YEAR(ORDERDATE) < 2020 AND P.PAYMENTID IS NULL

-- 23 TASK
SELECT P.PRODUCTNAME, C.CATEGORYNAME FROM PRODUCTS P
FULL JOIN PRODUCTCATEGORIES C
ON P.CATEGORYID = C.CATEGORYID
WHERE C.CATEGORYNAME IS NULL

-- 24 TASK
SELECT E.NAME AS EMPLOYEE_NAME, E.NAME AS MANAGER_NAME FROM EMPLOYEES E
INNER JOIN EMPLOYEES EM
ON E.MANAGERID = EM.MANAGERID
AND E.EMPLOYEEID <> EM.EMPLOYEEID
WHERE E.SALARY > 5000

-- 25 TASK
SELECT E.NAME, D.DEPARTMENTNAME FROM EMPLOYEES E
RIGHT JOIN DEPARTMENTS D
ON E.DEPARTMENTID = D.DEPARTMENTID
WHERE D.DEPARTMENTNAME LIKE 'M%'

-- 26 TASK
SELECT P.PRODUCTNAME, S.SALES FROM PRODUCTS P
INNER JOIN SALES S
ON P.PRODUCTID = S.PRODUCTID
WHERE S.SALES > 1000

 -- 27 TASK
SELECT S.STUDENTNAME, C.COURSENAME FROM STUDENTS S
LEFT JOIN COURSES C
ON S.COURSEID = C.COURSEID
WHERE C.COURSENAME <> 'MATH 101'

-- 28 TASK
SELECT O.ORDERID, P.PAYMENTID FROM ORDERS O
FULL JOIN PAYMENTS P
ON O.ORDERID = P.ORDERID
WHERE P.PAYMENTID IS NOT NULL

-- 29 TASK
SELECT P.PRODUCTNAME, C.CATEGORYNAME FROM PRODUCTS P
INNER JOIN PRODUCTCATEGORIES C
ON P.PRODUCTID = C.PRODUCTID
WHERE C.CATEGORYNAME IN('ELECTRONICS', 'FURNITURE')

-- 30 TASK
SELECT C.CUSTOMERNAME FROM CUSTOMERS C
INNER JOIN ORDERS O
ON C.CUSTOMERID = O.CUSTOMERID
WHERE YEAR(ORDERDATE) = 2023
GROUP BY C.CUSTOMERNAME
HAVING COUNT(O.ORDERID) >2


